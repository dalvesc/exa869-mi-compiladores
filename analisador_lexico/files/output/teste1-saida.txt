Tokens: 

<"delimitador de comentario", "/*", 1>
<"delimitador de comentario", "//", 2>
<"operador aritmetico", "-", 2>
<"palavra reservada", "const", 3>
<"palavra reservada", "int", 3>
<"operador relacional", "=", 3>
<"operador relacional", "=", 3>
<"palavra reservada", "string", 5>
<"operador relacional", "=", 5>
<"palavra reservada", "procedure", 7>
<"palavra reservada", "start", 7>
<"delimitador", "{", 7>
<"delimitador de comentario", "//", 7>
<"palavra reservada", "int", 9>
<"palavra reservada", "string", 10>
<"palavra reservada", "if", 17>
<"operador relacional", ">=", 17>
<"palavra reservada", "else", 18>
<"delimitador", "{", 18>
<"delimitador de comentario", "//", 19>
<"delimitador", "}", 20>
<"delimitador", "}", 22>
<"palavra reservada", "then", 24>
<"palavra reservada", "then", 25>
<"palavra reservada", "else", 25>
<"delimitador", ",", 26>
<"operador relacional", "=", 31>
<"operador relacional", "==", 32>
<"delimitador", ")", 32>
<"operador logico", "||", 34>
<"operador logico", "&&", 34>
<"operador logico", "&&", 34>
<"palavra reservada", "false", 34>
<"operador logico", "||", 34>
<"operador logico", "&&", 34>
<"operador relacional", "==", 34>
<"operador logico", "||", 35>
<"operador logico", "&&", 35>
<"operador logico", "||", 36>
<"palavra reservada", "int", 42>
<"palavra reservada", "function", 43>
<"palavra reservada", "boolean", 43>
<"palavra reservada", "int", 43>
<"palavra reservada", "real", 43>
<"palavra reservada", "string", 43>
<"palavra reservada", "return", 48>
<"delimitador", "}", 49>
<"palavra reservada", "var", 51>
<"delimitador", "{", 51>
<"palavra reservada", "string", 52>
<"operador relacional", "=", 52>
<"palavra reservada", "int", 53>
<"operador relacional", "=", 53>
<"operador relacional", "==", 53>
<"delimitador", "}", 54>
<"palavra reservada", "while", 56>
<"palavra reservada", "print", 57>
<"palavra reservada", "read", 58>
<"palavra reservada", "var", 62>
<"delimitador", "{", 62>
<"palavra reservada", "string", 63>
<"palavra reservada", "int", 64>
<"palavra reservada", "var", 66>
<"delimitador", "{", 66>
<"palavra reservada", "boolean", 67>
<"palavra reservada", "int", 68>
<"palavra reservada", "if", 71>
<"palavra reservada", "then", 71>
<"delimitador", "{", 71>
<"delimitador", "}", 73>
<"palavra reservada", "else", 73>
<"delimitador", "{", 73>
<"delimitador", "}", 75>
<"palavra reservada", "while", 77>
<"delimitador", "{", 77>
<"delimitador", "}", 79>
<"operador relacional", "=", 81>
<"operador relacional", "=", 83>
<"operador relacional", "=", 85>
<"operador logico", "||", 85>
<"operador logico", "&&", 85>
<"operador logico", "&&", 85>
<"palavra reservada", "false", 85>
<"operador logico", "||", 85>
<"operador logico", "&&", 85>
<"operador relacional", "==", 85>
<"operador relacional", "=", 87>
<"operador relacional", "==", 87>
<"operador relacional", "=", 88>
<"delimitador", "}", 89>
<"palavra reservada", "function", 91>
<"palavra reservada", "boolean", 91>
<"palavra reservada", "while", 92>
<"palavra reservada", "print", 93>
<"delimitador", "}", 94>
<"palavra reservada", "read", 95>
<"palavra reservada", "var", 99>
<"delimitador", "{", 99>
<"palavra reservada", "string", 100>
<"palavra reservada", "int", 101>
<"palavra reservada", "var", 103>
<"delimitador", "{", 103>
<"palavra reservada", "boolean", 104>
<"palavra reservada", "int", 105>
<"palavra reservada", "if", 108>
<"palavra reservada", "then", 108>
<"delimitador", "{", 108>
<"delimitador", "}", 110>
<"palavra reservada", "else", 110>
<"delimitador", "{", 110>
<"delimitador", "}", 112>
<"palavra reservada", "while", 114>
<"delimitador", "{", 114>
<"delimitador", "}", 116>
<"operador relacional", "=", 118>
<"operador relacional", "=", 120>
<"palavra reservada", "return", 123>
<"delimitador", "}", 124>
<"palavra reservada", "var", 125>
<"delimitador", "{", 125>
<"palavra reservada", "string", 125>
<"palavra reservada", "int", 126>
<"delimitador de comentario", "*/", 127>
<"palavra reservada", "var", 129>
<"delimitador", "{", 129>
<"palavra reservada", "string", 130>
<"palavra reservada", "int", 131>
<"palavra reservada", "real", 132>
<"palavra reservada", "boolean", 133>
<"delimitador", "}", 134>
<"palavra reservada", "function", 136>
<"palavra reservada", "int", 136>
<"palavra reservada", "string", 136>
<"delimitador", "{", 136>
<"palavra reservada", "return", 138>
<"delimitador", "}", 139>
<"palavra reservada", "procedure", 141>
<"delimitador", "{", 141>
<"operador relacional", "=", 142>
<"operador relacional", "=", 143>
<"operador aritmetico", "+", 143>
<"operador relacional", "=", 144>
<"palavra reservada", "if", 152>
<"operador relacional", ">=", 152>
<"palavra reservada", "then", 152>
<"delimitador", "{", 152>
<"delimitador", "}", 154>
<"palavra reservada", "else", 154>
<"delimitador", "{", 154>
<"delimitador", "}", 156>
<"delimitador de comentario", "*/", 156>
<"delimitador", "}", 158>

Erros: 
<"erro", "teste08", 2>
<"erro", "sem", 2>
<"erro", "erros", 2>
<"erro", "MAX", 3>
<"erro", "10,", 3>
<"erro", "MAX2", 3>
<"erro", "50;", 3>
<"erro", "Mensagem", 5>
<"erro", ""Hello", 5>
<"erro", "world";", 5>
<"erro", "comeca", 7>
<"erro", "aqui", 7>
<"erro", "o", 7>
<"erro", "programa", 7>
<"erro", "principal", 7>
<"erro", "idade;", 9>
<"erro", "nome;", 10>
<"erro", "print("Digite", 12>
<"erro", "o", 12>
<"erro", "nome");", 12>
<"erro", "read(nome);", 13>
<"erro", "print("Digite", 14>
<"erro", "a", 14>
<"erro", "idade");", 14>
<"erro", "read(idade);", 15>
<"erro", "(idade", 17>
<"erro", "150)", 17>
<"erro", "print("pode", 17>
<"erro", "aposentar", 17>
<"erro", "kkkk");", 17>
<"erro", "print("vai", 19>
<"erro", "trabalhar");", 19>
<"erro", "hehehe", 19>
<"erro", "//if", 24>
<"erro", "(true)", 24>
<"erro", "{outra_funcao();}", 24>
<"erro", "//if", 25>
<"erro", "(true)", 25>
<"erro", "{outra_funcao();}", 25>
<"erro", "{funcao();}", 25>
<"erro", "//int", 26>
<"erro", "..", 26>
<"erro", "a", 26>
<"erro", "b", 26>
<"erro", "//teste(oi,ola,t(2,i,outra_funcao()))", 28>
<"erro", "//print();", 30>
<"erro", "//d", 31>
<"erro", "a[2]", 31>
<"erro", "//(d", 32>
<"erro", "2", 32>
<"erro", "//d=s", 33>
<"erro", "//oi", 34>
<"erro", "ola", 34>
<"erro", "!a", 34>
<"erro", "oi(ola)", 34>
<"erro", "a", 34>
<"erro", "b", 34>
<"erro", "//oi", 35>
<"erro", "ola", 35>
<"erro", "!a", 35>
<"erro", "//oi", 36>
<"erro", "ola", 36>
<"erro", "//(2+(3*4)/(6))", 38>
<"erro", "//s+2/2/w", 40>
<"erro", "//procedure", 42>
<"erro", "proc", 42>
<"erro", "(boolean", 42>
<"erro", "b,", 42>
<"erro", "teste)", 42>
<"erro", "{print(d);", 42>
<"erro", "outra_funcao();}", 42>
<"erro", "chama_funcoes(boolean", 43>
<"erro", "b,", 43>
<"erro", "teste,", 43>
<"erro", "numero,", 43>
<"erro", "nome){", 43>
<"erro", "outra_funcao();", 45>
<"erro", "t(2,i,outra());", 46>
<"erro", "8;", 48>
<"erro", "soma", 52>
<"erro", "(2+(3*4)/(p));", 52>
<"erro", "f", 53>
<"erro", "(d", 53>
<"erro", "2", 53>
<"erro", ");", 53>
<"erro", "(b){", 56>
<"erro", "(oi);", 57>
<"erro", "(oi);", 58>
<"erro", "teste(oi,ola,t(2,i,outra_funcao()));", 59>
<"erro", "outra_funcao();", 60>
<"erro", "d=", 63>
<"erro", "3,", 63>
<"erro", "d=4;", 63>
<"erro", "s;", 64>
<"erro", "};", 65>
<"erro", "d=", 67>
<"erro", "3,", 67>
<"erro", "d=4;", 67>
<"erro", "s;", 68>
<"erro", "};", 69>
<"erro", "(true)", 71>
<"erro", "outra_funcao();", 72>
<"erro", "funcao();", 74>
<"erro", "(b)", 77>
<"erro", "outra_funcao();", 78>
<"erro", "p", 81>
<"erro", "5;", 81>
<"erro", "l", 83>
<"erro", "(2+(3*4)/(p));", 83>
<"erro", "r", 85>
<"erro", "oi", 85>
<"erro", "ola", 85>
<"erro", "!a", 85>
<"erro", "oi(ola)", 85>
<"erro", "a", 85>
<"erro", "b;", 85>
<"erro", "f", 87>
<"erro", "(d", 87>
<"erro", "2", 87>
<"erro", ");", 87>
<"erro", "//s", 88>
<"erro", "w[2];", 88>
<"erro", "funcao(){", 91>
<"erro", "(b){", 92>
<"erro", "(p);", 93>
<"erro", "(oi);", 95>
<"erro", "teste(oi,ola,t(2,i,outra_funcao()));", 96>
<"erro", "outra_funcao();", 97>
<"erro", "d=", 100>
<"erro", "3,", 100>
<"erro", "d=4;", 100>
<"erro", "s;", 101>
<"erro", "};", 102>
<"erro", "d=", 104>
<"erro", "3,", 104>
<"erro", "d=4;", 104>
<"erro", "s;", 105>
<"erro", "};", 106>
<"erro", "(true)", 108>
<"erro", "outra_funcao();", 109>
<"erro", "funcao();", 111>
<"erro", "(b)", 114>
<"erro", "outra_funcao();", 115>
<"erro", "outra_funcao();", 117>
<"erro", "p", 118>
<"erro", "5;", 118>
<"erro", "l", 120>
<"erro", "(2+(3*4)/(p));", 120>
<"erro", "8;", 123>
<"erro", "d=", 125>
<"erro", "3,", 125>
<"erro", "d=4;", 125>
<"erro", "s;}", 126>
<"erro", "nome;", 130>
<"erro", "idade,", 131>
<"erro", "numero;", 131>
<"erro", "numero_real;", 132>
<"erro", "teste;", 133>
<"erro", "nome_funcao(int", 136>
<"erro", "p1,", 136>
<"erro", "p1)", 136>
<"erro", "print(1);", 137>
<"erro", "1;", 138>
<"erro", "start()", 141>
<"erro", "teste", 142>
<"erro", "false;", 142>
<"erro", "idade", 143>
<"erro", "1", 143>
<"erro", "teste;", 143>
<"erro", "idade", 144>
<"erro", "nome_funcao(idade,", 144>
<"erro", "nome);", 144>
<"erro", "/*print("Digite", 145>
<"erro", "o", 145>
<"erro", "nome");", 145>
<"erro", "read(nome);", 146>
<"erro", "print("Digite", 147>
<"erro", "a", 147>
<"erro", "idade");", 147>
<"erro", "read(idade);", 148>
<"erro", "invalida();", 150>
<"erro", "(idade", 152>
<"erro", "150)", 152>
<"erro", "print("pode", 153>
<"erro", "aposentar", 153>
<"erro", "kkkk");", 153>
<"erro", "print("vai", 155>
<"erro", "trabalhar");", 155>
